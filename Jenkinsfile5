pipeline 
{
    agent any
    stages 
	{        
        stage('build && SonarQube analysis') 
		{
            steps 
			{
                withSonarQubeEnv('sonarqubeserver') 
				{
                    // Optionally use a Maven environment you've configured already
                    withMaven(jdk: 'JAVA_HOME', maven: 'M2_HOME') 
					{
                        sh 'mvn clean package sonar:sonar'
                    }
                }
            }
        }
        stage("Quality Gate") 
		{
            steps 
			{
                timeout(time: 1, unit: 'HOURS') 
				{
                    def qg = waitForQualityGate()
					if (qg.status != 'OK') 
					{
					error "Pipeline aborted due to quality gate failure: ${qg.status}"
					}
                }
            }
        }
    }
}
